import{_ as e,o as i,c as p,e as n}from"./app-88d36e46.js";const l={},a=n(`<p>不同工具比较</p><h3 id="pip" tabindex="-1"><a class="header-anchor" href="#pip" aria-hidden="true">#</a> pip</h3><p>简单安装</p><h3 id="pip-tools" tabindex="-1"><a class="header-anchor" href="#pip-tools" aria-hidden="true">#</a> pip-tools</h3><p>如果安装pip安装flask会安装以下依赖</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>click==7.1.2
Flask==1.1.2
itsdangerous==1.1.0
Jinja2==2.11.2
MarkupSafe==1.1.1
Werkzeug==1.0.1    
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>但是如果运行pip uninstall flask只会卸载Flask这个包其他依赖并不会卸载</p><blockquote><p>pip-tools 需要 &lt; pip 23.2 但是你安装pip-tools他会自动帮你更新到最新版本的pip 所以安装完需要运行 <code>pip install pip==22.2 --ignore-requires-python</code> 强制重装</p></blockquote><p>pip-compile requirements 会生成 requirements.txt 之后再用 pip-sync requirements.txt 就可以比对项目与requirements中的依赖并自动管理 不建议使用</p><h3 id="pipenv" tabindex="-1"><a class="header-anchor" href="#pipenv" aria-hidden="true">#</a> pipenv</h3><ol><li><p>建议先试用venv创建一个环境，之后进入虚拟环境（执行./venv/bin/activate 脚本即可执行）</p></li><li><p>pipenv --python 3.7来创建pipenv管理（如果上面没有使用venv则会在默认位置创建一个虚拟环境但是有venv虚拟环境就会在</p></li><li><p>pipenv shell 进入虚拟环境 ==如果在命令行开头已经有(venv)这样的表示代表已经进入虚拟环境了可以不用这个命令==</p></li><li><p>之后可以使用以下命令来根据requirements来安装包</p></li><li><p>pipenv install -r requirements</p></li><li><p>pipenv update更新（只安装不卸载）</p></li><li><p>pipenv uninstall --all 删除所有</p></li><li><p>pipenv clean 自动清理项目中不需要的包</p></li><li><p>pipenv update [package] 升级项目中的包</p></li></ol><p>只能根据命令来修改配置文件然后修改环境中的依赖,无法直接通过配置文件来修改环境,而且安装速度有点慢</p><p>当项目部署上去之后只需要在pipfile所在目录执行pipenv install即可</p><h3 id="pipx-和-poetry" tabindex="-1"><a class="header-anchor" href="#pipx-和-poetry" aria-hidden="true">#</a> pipx 和 poetry</h3><p>https://www.cnblogs.com/aifengqi/p/15394389.html</p>`,15),t=[a];function s(r,d){return i(),p("div",null,t)}const c=e(l,[["render",s],["__file","env-pip.html.vue"]]);export{c as default};
